class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        
        int times=1;
        int count=1;
        for(int i=1; i<nums.size(); i++){
            if(nums[i] !=nums[count-1] ){
                nums[count++] = nums[i];
                times=1;
            }
            else{
                if(times < 2){    "== is faster than <, use times==1, like the top solution"
                    nums[count++] = nums[i];
                    times++;
                }
            }
        }
        return count;
    }
};


//top resolution

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int k=1,count=1;
        for(int i=1;i<nums.size();i++){
            if(nums[i-1]!=nums[i]){
                nums[k++]= nums[i];
                count=1;
            }
            else if(nums[i-1]==nums[i]&&count==1){
                nums[k++]= nums[i];
                count++;
            }
            else
                count++;
        }
        return nums.size()>0?k:0;
    }
};
