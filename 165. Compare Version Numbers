class Solution {
public:
    void strsplit(string &s, vector<int>& v, string& c)
    {
        string::size_type pos1, pos2;

        pos2 = s.find(c);
        pos1 = 0;
        while(string::npos != pos2)
        {
            v.push_back(atoi(s.substr(pos1).c_str()));

            pos1 = pos2 + c.size();
            pos2 = s.find(c, pos1);
            cout << v.back() << ',';
        }
        if(pos1 != s.length())
            v.push_back(atoi(s.substr(pos1).c_str()));
    }

    
    int compareVersion(string version1, string version2) {
        vector<int> v1, v2;
       
        string c=".";
        
        strsplit(version1, v1, c);
        strsplit(version2, v2, c);
       
        for(int i=0; i<min(v1.size(), v2.size()); i++){
            if(v1[i] > v2[i])
                return 1;
            else if(v1[i] < v2[i])
                return -1;
        }
        
        if(v1.size() > v2.size()){
            for(int i=0; i<v1.size()-v2.size(); i++){
                if(v1[v2.size()+i] != 0)
                    return 1;
            }
            return 0;
        }
        else if(v1.size() < v2.size()){
            for(int i=0; i<v2.size()-v1.size(); i++){
                if(v2[v1.size()+i] != 0)
                    return -1;
            }
            return 0;
        }
        else
            return 0;
    }
};
