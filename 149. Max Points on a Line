/**
 * Definition for a point.
 * struct Point {
 *     int x;
 *     int y;
 * }
 */
 /*
 pit: 
 1. 用斜率判断共线存在float的比较问题，采用三点共线；
 2. 使用int存在大数相乘溢出的问题；
 3. 要对重复点做特殊处理；
 */
 
int maxPoints(struct Point* points, int pointsSize) {
    int i,j,k,cl=0, cr=0;
    int max=0,repeat=0;
    
    if(pointsSize <= 2){
        return pointsSize;
    }
    
    for(i=0;i<pointsSize-1;i++){
        cr = 0;
        for(j=i+1; j<pointsSize; j++){
            if(points[i].x == points[j].x && \
               points[i].y == points[j].y){
                cr++;
                continue;
            }
            cl=0;
            for(k=0; k<pointsSize; k++){
                if( (long)points[i].x*(long)points[j].y + \
                    (long)points[j].x*(long)points[k].y + \
                    (long)points[k].x*(long)points[i].y - \
                    (long)points[i].x*(long)points[k].y - \
                    (long)points[j].x*(long)points[i].y - \
                    (long)points[k].x*(long)points[j].y == 0){ 
                    cl++;
                }
            }
            
            if(cl > max){
                max = cl;
            }
        }
        
        if(cr > repeat){
            repeat = cr;
        }
    }
    printf("\n");
    
    return repeat>max?repeat+1:max;
}
